<template>
	<view>
		<map id="map1" ref="map1" class="map" :style="{height:mapHeight}" :scale="scale" :longitude="longitude" :latitude="latitude"
		 :polyline="polyline" :markers="markers" :show-location="true">

		</map>
		<image v-if='state == 0' class="backImage" @click="back" src="../../static/CZC/back.png" style=""></image>
		<view v-if='state == 0' style="width: 100%;position: fixed;bottom: 40px;left: 0px;right: 0px;align-items: center;">
			<!-- 司机未接单 -->
			<view class="waitContent" elevation='5px'>
				<image src="../../static/CZC/radar.png" style="width: 100rpx;height: 100rpx;"></image>
				<view style="margin-top: 50rpx;align-items: center;">
					<text class="isWaitText">正在等待司机接单...</text>
					<text style="color: #999999;font-size: 32rpx;padding-top: 10rpx;" @click="BouncePay">取消订单</text>
				</view>
			</view>
		</view>
		<view v-if='state == 1 || state == 2 || state == 4' style="width: 100%;position: fixed;top: 60px;left: 0px;right: 0px;align-items: center;">
			<!-- 司机前往乘客地 -->
			<view elevation='5px' class="comeTopContent">
				<view style="flex-direction: row; ">
					<image src="../../static/CZC/HeadPhoto.png" style="width: 100rpx;height: 100rpx;">
					</image>
					<view style="width: 470rpx;margin-left: 30rpx;">
						<view style="width: 470rpx;">
							<text class="driverNameText">{{driverName}}</text>
						</view>
						<view style="width: 470rpx;flex-direction:row;margin-top: 20rpx;">
							<view style="width: 200rpx;">
								<text class="fontClass-30">{{vehicleNumber}}</text>
							</view>
							<view style="width: 200rpx;">
								<!-- <text class="fontClass-30">豪华SUV</text> -->
							</view>
						</view>
					</view>
					<image @click="call" src="../../static/CZC/Call.png" style="width: 40rpx;height: 40rpx;"></image>
				</view>
				<view v-if="state == 1" style="margin-top: 10rpx;border-top:1px solid #EAEAEA;padding-top: 30rpx;line-height: 60rpx;">
					<text class="fontClass-28" style="color: #ff0000;">出发时间：{{AppointmentTime}}</text>
					<text class="fontClass-28" style="color: #ff0000;">上车地点：{{StartAddress}} </text>
					<view><text class="fontClass-28">司机已接单,请提前前往上车点等候</text></view>
				</view>
				<view v-if="state == 2" style="margin-top: 30rpx;border-top:1px solid #EAEAEA;padding-top: 30rpx;">
					<text class="fontClass-28" style="color: #ff0000;">司机距离您的位置{{distance}}公里，预计{{duration}}分钟到达出发点。</text>
				</view>
				<view v-if="state == 4" style="margin-top: 30rpx;border-top:1px solid #EAEAEA;padding-top: 30rpx;">
					<text class="fontClass-28" style="color: #ff0000;">距离目的地大约{{distance}}公里，预计{{duration}}分钟到达目的地。</text>
				</view>
			</view>
			<!-- #ifdef MP-WEIXIN -->
			<view style="width: 720rpx;margin-top: 20rpx;align-items: flex-end;margin-right: 30rpx;">
				<button open-type="share" style="background-color: #FFFFFF;width: 200rpx;margin-right: 0;"><text>分享行程</text></button>
			</view>
			<!-- #endif -->
			<!-- #ifdef APP-PLUS -->
			<view style="width: 720rpx;margin-top: 20rpx;align-items: flex-end;margin-right: 30rpx;">
				<button  style="background-color: #FFFFFF;width: 200rpx;margin-right: 0;" @click="ShareTrip"><text style="font-size: 32rpx;margin: 20rpx;">分享行程</text></button>
			</view>
			<!-- #endif -->
		</view>
		<view v-if='state == 2' style="width: 750rpx;position: fixed;bottom: 40px;left: 0px;right: 0px;align-items: center;">
			<!-- 司机前往乘客地 -->
			<view elevation='5px' class="comeBottomContent">
				<view @click="callPolice" style="width: 300rpx;align-items: center;border-right:1px solid #2C2D2D;">
					<text class="callPolice" style="">一键报警</text>
				</view>
				<view @click="BouncePay" style="width: 300rpx;align-items: center;">
					<text class="cancle">取消订单</text>
				</view>
			</view>
		</view>
		<view v-if='state == 1' style="width: 100%;position: fixed;bottom: 40px;left: 0px;right: 0px;align-items: center;">
			<!-- 司机前往乘客地 -->
			<view elevation='5px' style="width: 300rpx;padding-top: 30rpx;padding-bottom: 30rpx;background-color: #FFFFFF;border-radius: 9px;flex-direction: row;box-shadow: 0px 6px 20px 0px rgba(231, 231, 231, 0.53);">
				<view @click="BouncePay" style="width: 300rpx;align-items: center;">
					<text class="cancle">取消订单</text>
				</view>
			</view>
		</view>
		<view v-if='state == 4' style="width: 750rpx;position: fixed;bottom: 40px;left: 0px;right: 0px;">
			<view style="padding-left: 10rpx;" elevation='0px'>
				<image @click="callPolice" src="../../../static/Home/CallPollice.png" style="width: 120rpx;height: 120rpx;"></image>
			</view>
			<view style="align-items: center;height: 300rpx;">
				<!-- <view elevation='5px' class="orderBottomContent">
					<view style="flex-direction: row;justify-content: space-between;margin-bottom: 30rpx;padding-bottom: 30rpx;border-bottom:1px solid #EAEAEA;">
						<view>
							<text class="orderTitleFont">车费合计{{totalPrice}}元</text>
						</view>
						<view>
							 <text @click="payDetail" style="font-size:26rpx;font-family:Source Han Sans SC;font-weight:400;color:#4281FF;">费用疑问</text>
						</view>
					</view>
					<view v-for="item in priceArr" :key='item.key' style="flex-direction: row;justify-content: space-between;padding-bottom: 30rpx;">
						<view>
							<text class="orderTitleFont">{{item.key}}</text>
						</view>
						<view>
							<text class="orderTitleFont">{{item.value}}元</text>
						</view>
					</view>
				</view> -->
			</view>
		</view>
	</view>
</template>

<script>
	import $privateTaxi from "@/common/Czcprivate.js"; //出租车专线
	import $taxi from '@/common/Czc.js';
	import uniPopup from "@/pages_CZC/components/CZC/uni-popup/uni-popup.vue";
	import uniIcons from "@/pages_CZC/components/CZC/uni-icons/uni-icons.vue";


	export default {
		components: {
			uniPopup,
			uniIcons
		},

		data() {
			var that = this;
			return {
				scale: 15,
				longitude: "", //地图中心点经度
				latitude: "", //地图中心点纬度
				points: [],
				polyline: [], //线
				directionInterval: 0, //规划用定时器。
				orderInterval: 0, //获取司机是否接单用定时器。
				comingInterval: 0, //司机到达乘客出发地用定时器。
				distance: '', //距离
				duration: '', //预计时间
				markers: [], //标记点
				mapHeight: '', //地图高度
				hintIndex: -1, //提示状态值
				hintIndex1: -1, //提示状态值
				mapContext: '', //mapContext对象
				isShow: false,
				index: 0,
				lon: "", //用户位置经度
				lat: "", //用户位置纬度
				//接口数据
				orderNumber: '',
				vehicleNumber: '',
				state: '', //订单状态
				startLon: "", //开始
				startLat: "",
				endLon: "", //结束
				endLat: "",
				thisDriverLon: "", //司机位置经度
				thisDriverLat: "", //司机位置纬度
				driverName: '张师傅', //司机姓名
				totalPrice: 32.5,
				driverPhone: '0', //司机电话号码
				userInfo: [],
				priceArr: [{
						key: '起步价',
						value: '10.0'
					},
					{
						key: '里程',
						value: '21.0'
					},
					{
						key: '等候',
						value: '0.5'
					}
				],
				payType: [{
						typeName: '微信',
						typeColor: '#00C805',
						iconPath: '../../static/CZC/Wechatpay.png',
						value: 'wxpay',
						checked: true,
					},
					{
						typeName: '支付宝',
						typeColor: '#0EBDFF',
						iconPath: '../../static/CZC/Alipay.png',
						value: 'alipay',
						checked: false
					},
				],
				FactPayPrice: '', //订单价格
				AppointmentTime: '', //预约时间
				StartAddress: '', //上车点
				UrgentPhone: "110", //紧急联系人电话
			}
		},
		onLoad(option) {
			let that = this;
			that.userInfo = uni.getStorageSync('userInfo') || '';
			that.orderNumber = option.orderNumber;
			getApp().globalData.orderNumber = that.orderNumber; //更改当前订单号
			uni.getSystemInfo({
				//设置地图高度为可使用的高度
				success: function(res) {
					that.mapHeight = res.windowHeight + 'px';
				}
			});
			that.getMyLocaton();
			that.getOrder();
			that.getRealOrder();
			/* that.test(); */
		},
		onReady() {
			let that = this;
			that.mapContext = uni.createMapContext("map", this);
		},
		onUnload() {
			let that = this;
			clearInterval(that.orderInterval);
			clearInterval(that.directionInterval);
			clearInterval(that.comingInterval);
		},
		onShareAppMessage(res) {
			var that=this;
			if (res.from === 'button') { // 来自页面内分享按钮
				return {
					title: '你的好友分享给你一个行程',
					path: "/pages_CZC/pages/CZC/TripShare?type=出租车_专线&orderNumber="+that.orderNumber
				}
			}
		},
		methods: {
			ShareTrip:function(){
				var that=this;
				// uni.share({//分享小程序卡片
				//     provider: "weixin",
				//     scene: "WXSceneSession",
				//     type: 5,
				//        imageUrl: 'https://img-cdn-qiniu.dcloud.net.cn/uniapp/app/share-logo@3.png',
				//        title: '你的好友给你分享了一个行程',
				//        miniProgram: {
				//            id: 'wx8dcbb62a76885221',
				//            path: "/pages_CZC/pages/CZC/TripShare?type=出租车_专线&orderNumber="+that.orderNumber,
				//            type: 2 ,
				//            webUrl: 'http://uniapp.dcloud.io'
				//        },
				// });
				uni.share({//图文分享
				    provider: "weixin",
				    scene: "WXSceneSession",
				    type: 0,
				    href: "https://zntc.145u.net:9099/h5/#/pages_CZC/pages/CZC/TripShare?type=出租车_专线&orderNumber="+that.orderNumber,
				    title: "行程分享",
				    summary: "你的好友给你分享了一个行程,赶紧查看！",
				    imageUrl: "https://zntc.145u.net:9099/UpLoadImages/Image/QuanYunLogo.png",
				});
			},
			openBottomPopup: function() {
				this.$nextTick(function() {
					this.$refs['bottomPopup'].open();
				});
			},
			closeBottomPopup: function() {
				this.$nextTick(function() {
					this.$refs['bottomPopup'].close();
				});
			},
			back: function() {
				let that = this;
				uni.navigateBack();
			},
			getOrder: function() {
				//上级页面统一返回订单编号。此处根据订单编号获取上下车点。
				let that = this;

				uni.showLoading({
					title: '加载中'
				})
				uni.request({
					url: $privateTaxi.Interface.QuerySpecialLineOrder_Passenger.value,
					method: $privateTaxi.Interface.QuerySpecialLineOrder_Passenger.method,
					data: {
						OrderNumber: that.orderNumber
					},
					success: function(res) {
						uni.hideLoading();
						// console.log(res.data);
						let data = res.data.data;
						//成功
						// console.log(res);
						if (res.data.status) {
							//赋值结束点经纬度
							that.startLon = data.StartLon; //起点
							that.startLat = data.StartLat;
							that.endLon = data.EndLon; //终点
							that.endLat = data.EndLat;
							that.thisDriverLon = data.DriverLon;
							that.thisDriverLat = data.DriverLat;
							that.driverPhone = data.DriverPhone; //司机电话
							that.driverName = data.DriverName;
							that.vehicleNumber = data.VehicleNumber; //车牌号
							that.state = data.State; //订单状态
							that.FactPayPrice = data.FactPayPrice;
							that.StartAddress = data.StartAddress;
							that.AppointmentTime = data.AppointmentTime.replace("T", " ");
							//绘制起终点标记
							that.setMarker('start', that.startLon, that.startLat, '../../static/CZC/Start.png');
							that.setMarker('end', that.endLon, that.endLat, '../../static/CZC/End.png');
							if (that.state == 0) {
								//等待接单
								that.hintIndex = 0;
								that.hintIndex1 = 0;
							} else if (that.state == 1) {
								//司机已接单

							} else if (that.state == 2) {
								//司机已出发
								//state == 5
								//开启旅客定位
								getApp().globalData.constantly();
								//绘制司机标记点
								that.setMarker('taxi', that.thisDriverLon, that.thisDriverLat, '../../static/CZC/Car.png');
								//第一次路线规划
								//从司机位置到起点
								that.getDirectionDriving(that.thisDriverLon + ',' + that.thisDriverLat, that.startLon + ',' + that.startLat);
								//开启时时规划
								that.openRealComing();
							} else if (that.state == 3) {
								//司机已到出发地
								//开启旅客定位
								getApp().globalData.constantly();
							} else if (that.state == 4) {
								//订单执行中
								//开启旅客定位
								getApp().globalData.constantly();
								//state == 10
								//第一次路线规划
								//绘制司机标记点
								that.setMarker('taxi', that.thisDriverLon, that.thisDriverLat, '../../static/CZC/Car.png');
								uni.getLocation({
									type: 'gcj02',
									success: function(res) {
										that.lon = res.longitude;
										that.lat = res.latitude;
										that.getDirectionDriving(that.lon + ',' + that.lat, that.endLon + ',' + that.endLat);
									}
								})
								//开启时时规划
								that.openRealDirection();
								// }else if (that.state == 5) {
								// 	//state == 15
								// 	getApp().globalData.closeUpload();
								// 	// uni.showToast({
								// 	// 	title: '请支付订单',
								// 	// 	icon: 'none'
								// 	// })
								// 	uni.redirectTo({
								// 		url:"./PaymentSuccess"
								// 	})
							} else if (that.state == 6) {
								//支付完成
								//关闭旅客上传定位
								getApp().globalData.closeUpload();
								uni.redirectTo({
									url: "./PaymentSuccess"
								})
							} else if (that.state == 7) {
								//司机取消订单
								//关闭旅客上传定位
								getApp().globalData.closeUpload();
							} else if (that.state == 8) {
								//关闭旅客上传定位
								getApp().globalData.closeUpload();
								uni.showToast({
									title: '订单已取消',
									icon: 'none',
								});
								setTimeout(function() {
									uni.hideLoading();
									uni.navigateBack({});
								}, 1500)
								//旅客取消订单
							} else if (that.state == 9) {
								//支付失败
								//关闭旅客上传定位
								getApp().globalData.closeUpload();
							}
						} else {
							uni.showToast({
								title: res.data.msg,
								icon: "none"
							});
						}
					},
					fail: function(res) {
						uni.hideLoading();
						uni.showToast({
							title: '网络连接失败',
							icon: 'none'
						})
						console.log(res);
					}
				})
			},
			getRealOrder: function() {
				//时时获取订单状态
				let that = this;
				that.orderInterval = setInterval(function() {
					uni.request({
						url: $privateTaxi.Interface.QuerySpecialLineOrder_Passenger.value,
						method: $privateTaxi.Interface.QuerySpecialLineOrder_Passenger.method,
						data: {
							OrderNumber: that.orderNumber
						},
						success: function(res) {
							let data = res.data.data;
							// console.log(res)
							if (res.data.status) {
								that.thisDriverLon = data.DriverLon;
								that.thisDriverLat = data.DriverLat;
								that.driverPhone = data.DriverPhone; //司机电话
								that.driverName = data.DriverName;
								that.state = data.State; //订单状态
								that.vehicleNumber = data.VehicleNumber; //车牌号
								// console.log(res)
								// console.log(data.thisDriverLon);
								// console.log(data.thisDriverLat);
								if (that.state == 0) {
									//等待司机接单中
									that.hintIndex = 0;
									that.hintIndex1 = 0;

								} else if (that.state == 1) {
									//司机已接单
									if (that.hintIndex1 == 0) {
										uni.showToast({
											title: '已有司机接单',
											icon: 'none'
										});
										that.hintIndex1 = 1;
									}
								} else if (that.state == 2) {
									//司机已出发
									//state == 5
									//开启旅客定位
									getApp().globalData.constantly();
									if (that.hintIndex == 0) {
										uni.showToast({
											title: '司机已出发',
											icon: 'none'
										});
										that.hintIndex = 1;
									}
									that.setMarker('taxi', that.thisDriverLon, that.thisDriverLat, '../../static/CZC/Car.png');
									that.getDirectionDriving(that.thisDriverLon + ',' + that.thisDriverLat, that.startLon + ',' + that.startLat);
									if (that.comingInterval == 0) {
										that.openRealComing();
									}
								} else if (that.state == 3) {
									//开启旅客定位
									getApp().globalData.constantly();
									//司机已到出发地
								} else if (that.state == 4) {
									//开启旅客定位
									getApp().globalData.constantly();
									//订单执行中
									//state == 10
									//绘制司机标记点
									that.setMarker('taxi', that.thisDriverLon, that.thisDriverLat, '../../static/CZC/Car.png');
									//清除司机到达出发地的路径规划定时器
									clearInterval(that.comingInterval);
									uni.getLocation({
										type: 'gcj02',
										success: function(res) {
											that.lon = res.longitude;
											that.lat = res.latitude;
											that.getDirectionDriving(that.lon + ',' + that.lat, that.endLon + ',' + that.endLat);
										}
									});
									if (that.directionInterval == 0) {
										//开启到达目的地定时器。
										that.openRealDirection();
									}
									// }else if (that.state == 5) {
									// 	//待支付
									// 	//state == 15
									// 	//关闭旅客上传定位
									// 	getApp().globalData.closeUpload();
									// 	//清除定时器
									// 	clearInterval(that.directionInterval);
									// 	that.directionInterval = 0;
									// 	clearInterval(that.orderInterval);
									// 	that.orderInterval = 0;
									// 	that.polyline = [];
									// 	if (!that.isShow) {
									// 		// that.openBottomPopup();
									// 	}
									// 	that.isShow = true;
									// 	uni.redirectTo({
									// 		url:"./PaymentSuccess"
									// 	})
								} else if (that.state == 6) {
									//支付完成
									//关闭旅客上传定位
									getApp().globalData.closeUpload();
									clearInterval(that.directionInterval);
									that.directionInterval = 0;
									clearInterval(that.orderInterval);
									that.orderInterval = 0;
									that.polyline = [];
									uni.redirectTo({
										url: "./PaymentSuccess"
									})
								} else if (that.state == 7) {
									//司机取消订单
									//关闭旅客上传定位
									getApp().globalData.closeUpload();
								} else if (that.state == 8) {
									//旅客取消订单
									//关闭旅客上传定位
									getApp().globalData.closeUpload();
									uni.showToast({
										title: '订单已取消',
										icon: 'none',
									});
									setTimeout(function() {
										uni.hideLoading();
										uni.navigateBack({});
									}, 1500)
								} else if (that.state == 9) {
									//支付失败
									//关闭旅客上传定位
									getApp().globalData.closeUpload();
								}
							} else {
								uni.showToast({
									title: res.data.msg,
									icon: "none"
								});
							}
						},
						fail: function(res) {
							uni.hideLoading();
							uni.showToast({
								title: '网络连接失败',
								icon: 'none'
							})
						}
					});
				}, 3000);
			},

			//--------等待司机到达
			call: function() {
				//呼叫司机
				let that = this;
				uni.makePhoneCall({
					phoneNumber: that.driverPhone
				});
			},
			callPolice: function() {
				//一键报警
				let that = this;
				if (that.userInfo.autograph != "") {
					that.UrgentPhone = that.userInfo.autograph
				}
				uni.showModal({
					title: "一键报警",
					content: "注意：恶意报警将承担相关法律责任",
					confirmText: "报警",
					confirmColor: "#E74246",
					success(res) {
						if (res.confirm) {
							uni.getLocation({
								type: 'gcj02',
								geocode: true,
								success: function(res) {
									//#ifdef MP-WEIXIN
									that.getAddressByLocation(res)
									// #endif
									// #ifdef APP-PLUS
									uni.request({
										url: $taxi.Interface.addPassengerOneTouchAlarm.value,
										method: $taxi.Interface.addPassengerOneTouchAlarm.method,
										data: {
											orderNumber: that.orderNumber,
											passengerNumber: that.userInfo.userId,
											Lon: res.longitude,
											Lat: res.latitude,
											Address: that.packAddress(res.address),
										},
										success(res) {
											uni.makePhoneCall({ //拨打紧急联系人电话
												phoneNumber: that.UrgentPhone
											});
											if (res.data.status) {
												uni.showToast({
													title: res.data.msg,
													icon: "none"
												})
											} else {
												uni.showToast({
													title: res.data.msg,
													icon: "none"
												})
											}
										},
										fail() {
											uni.makePhoneCall({ //拨打紧急联系人电话
												phoneNumber: that.UrgentPhone
											});
											uni.showToast({
												title: "网络连接失败",
												icon: "none"
											})
										}
									})
									// #endif
								}
							});
						}
					}
				})
			},
			getAddressByLocation: function(value) { //地址逆解析
				let that = this;
				uni.request({
					url: $taxi.Interface.getAddressByLocation.value,
					method: $taxi.Interface.getAddressByLocation.method,
					data: {
						key: $taxi.Interface.getAddressByLocation.key,
						location: value.longitude + ',' + value.latitude
					},
					success(res) {
						uni.request({
							url: $taxi.Interface.addPassengerOneTouchAlarm.value,
							method: $taxi.Interface.addPassengerOneTouchAlarm.method,
							data: {
								orderNumber: that.orderNumber,
								passengerNumber: that.userInfo.userId,
								Lon: value.longitude,
								Lat: value.latitude,
								Address: res.data.regeocode.formatted_address,
							},
							success(res) {
								console.log(res)
								uni.makePhoneCall({ //拨打紧急联系人电话
									phoneNumber: that.UrgentPhone
								});
								if (res.data.status) {
									uni.showToast({
										title: res.data.msg,
										icon: "none"
									})
								} else {
									uni.showToast({
										title: res.data.msg,
										icon: "none"
									})
								}
							},
							fail() {
								uni.makePhoneCall({ //拨打紧急联系人电话
									phoneNumber: that.UrgentPhone
								});
								uni.showToast({
									title: "网络连接失败",
									icon: "none"
								})
							}
						})
					},
				})

			},
			packAddress: function(value) { //组装地址
				var country = '';
				var province = '';
				var city = '';
				var district = '';
				var street = '';
				var streetNum = '';
				var poiName = '';
				if (value.country != "undefined") {
					country = value.country;
				}
				if (value.province != "undefined") {
					province = value.province;
				}
				if (value.city != "undefined") {
					city = value.city;
				}
				if (value.district != "undefined") {
					district = value.district;
				}
				if (value.street != "undefined") {
					street = value.street;
				}
				if (value.streetNum != "undefined") {
					streetNum = value.streetNum;
				}
				if (value.poiName != "undefined") {
					poiName = value.poiName;
				}
				return country + province + city + district + street + streetNum + poiName;
			},
			CheckPayState: function() { //检测支付状态
				let that = this;
				var payPlatform = 3; //支付类型如：支付宝=2,App=3,公众号=4,小程序=5等
				// #ifdef H5
				payPlatform = 4;
				//  #endif
				// #ifdef MP-WEIXIN
				payPlatform = 5;
				//  #endif
				uni.request({
					url: $privateTaxi.Interface.CheckPayState.value,
					method: $privateTaxi.Interface.CheckPayState.method,
					data: {
						payType: payPlatform,
						orderNumber: that.orderNumber
					},
					success(res) {
						console.log(res);
						if (res.data.status) {
							that.cancleOrder();
						} else {
							uni.hideLoading();
							uni.showToast({
								title: '取消失败',
								icon: 'none',
							});
						}
					},
					fail() {
						uni.hideLoading();
						uni.showToast({
							title: '网络连接失败',
							icon: 'none',
						});
					}
				})
			},
			BouncePay: function() {
				let that = this;
				var payPlatform = 3; //支付类型如：支付宝=2,App=3,公众号=4,小程序=5等
				// #ifdef H5
				payPlatform = 4;
				//  #endif
				// #ifdef MP-WEIXIN
				payPlatform = 5;
				//  #endif
				uni.showModal({
					title: "取消订单",
					content: "您是否取消订单",
					success(res) {
						if (res.confirm) {
							uni.showLoading({
								mask: true,
							})
							uni.request({
								url: $privateTaxi.Interface.BouncePay.value,
								method: $privateTaxi.Interface.BouncePay.method,
								data: {
									payType: payPlatform,
									orderNumber: that.orderNumber,
									price: that.FactPayPrice
									// price: 0.01
								},
								success(res) {
									console.log(res)
									if (res.data.status) {
										console.log(11)
										that.CheckPayState()
									} else {
										uni.hideLoading();
										uni.showToast({
											title: '取消失败',
											icon: 'none',
										});
									}
								},
								fail(res) {
									uni.hideLoading();
									uni.showToast({
										title: '网络连接失败',
										icon: 'none',
									});
								}
							})
						}
					}
				})
			},
			cancleOrder: function() {
				//取消订单
				let that = this;
				//关闭所有的定时器				
				uni.request({
					url: $privateTaxi.Interface.CancelSpecialLineOrder_Passenger.value,
					method: $privateTaxi.Interface.CancelSpecialLineOrder_Passenger.method,
					data: {
						OrderNumber: that.orderNumber,
						UserId: that.userInfo.userId,
					},
					success: function(res) {
						let data = res.data.data;
						if (res.data.status) {
							clearInterval(that.directionInterval);
							that.directionInterval = 0;
							clearInterval(that.orderInterval);
							that.orderInterval = 0;
							getApp().globalData.closeUpload();
							uni.hideLoading();
							uni.showToast({
								title: '取消成功',
								icon: 'none',
							});
							setTimeout(function() {
								uni.navigateBack({});
							}, 1500)
						} else {
							uni.hideLoading();
							uni.showToast({
								title: res.data.msg,
								icon: 'none'
							})
						}
					},
					fail: function(res) {
						uni.hideLoading();
						uni.showToast({
							title: '网络连接失败',
							icon: 'none'
						})
					}
				});

			},
			//--------前往终点
			problem: function() {
				//费用疑问
				let that = this;
				uni.showToast({
					title: 'problem'
				});
			},
			//------支付页面
			payDetail: function() {
				//支付详情
				uni.navigateTo({
					url: '../CZC/PriceDetail'
				});

			},
			close: function() {
				//关闭
				let that = this;
				uni.switchTab({
					url: '../order/OrderList'
				});
			},
			payment: function(e) {
				//支付
				let that = this;

				var timeStamp = new Date().getTime();
				uni.requestPayment({
					provider: e.detail.value.chooseType,
					orderInfo: '111',
					timeStamp: timeStamp,
					nonceStr: '',
					package: '',
					paySign: '',
					success: function(res) {
						console.log(res);
						uni.navigateTo({
							url: './PaymentFail'
						});
					},
					fail: function(res) {
						console.log(res);
						uni.navigateTo({
							url: './PaymentFail'
						});
					}
				});
			},
			choosEcoupon: function() {
				//选择优惠券
				uni.showToast({
					title: 'choosEcoupon'
				})
			},
			//-------------------------
			getMyLocaton: function() {
				let that = this;
				uni.getLocation({
					type: 'gcj02',
					success: function(res) {
						that.lon = res.longitude;
						that.lat = res.latitude;
						if (that.longitude == "" && that.latitude == "") {
							that.longitude = that.lon;
							that.latitude = that.lat;
						}
					}
				});
			},
			setMapCenter: function() {
				//设置地图中心点
				let that = this;
				that.longitude = that.lon;
				that.latitude = that.lat;
			},
			openRealDirection: function() {
				//开启到达目的地时时路线规划，目前设置10秒一次。
				let that = this;
				that.directionInterval = setInterval(function() {
					uni.getLocation({
						type: 'gcj02',
						success: function(res) {
							that.lon = res.longitude;
							that.lat = res.latitude;
							that.getDirectionDriving(that.lon + ',' + that.lat, that.endLon + ',' + that.endLat);
						}
					})
				}, 10000);
			},
			openRealComing: function() {
				let that = this;
				that.comingInterval = setInterval(function() {
					that.getDirectionDriving(that.thisDriverLon + ',' + that.thisDriverLat, that.startLon + ',' + that.startLat);
				}, 10000);
			},


			getDirectionDriving: function(startLonLat, endLonLat) {
				//调用高德api取得路径规划并绘制线路
				let that = this;
				uni.request({
					url: $taxi.InterfaceAddress[0],
					data: {
						startLonLat: startLonLat,
						endLonLat: endLonLat,
					},
					method: "GET",
					success: function(res) {
						//日后会加入定时，此处需清空
						that.points = [];
						that.polyline = [];
						that.distance = (res.data.Distance / 1000).toFixed(1);
						that.duration = (res.data.Duration / 60).toFixed(0);
						var polylineArr = [];
						var points = [];

						polylineArr = res.data.Polyline;

						for (var i = 0; i < polylineArr.length; i++) {
							var arr = polylineArr[i].split(';');
							for (var j = 0; j < arr.length; j++) {
								points.push(arr[j]);
							}
						}
						//根据文件建设对象经纬度数组
						for (var i = 0; i < points.length; i++) {
							var arr = points[i].split(',');
							var obj = {
								longitude: arr[0],
								latitude: arr[1]
							}
							that.points.push(obj);
						}
						var obj = {
							points: that.points,
							color: "#4bdc27",
							arrowLine: true,
							width: 6
						};
						that.polyline.push(obj);
					},
					fail: function(res) {
						console.log(res);
					}
				});
			},
			setMarker: function(id, lon, lat, iconPath) {
				let that = this;
				var width = 20;
				var height = 20;
				if (id == 'taxi') {
					width = 40;
					height = 40;
					that.markers = that.markers.filter(res => res.id == 'start' || res.id == 'end');
				} else if (id.indexOf('car') > -1) {
					width = 40;
					height = 40;
					that.markers = that.markers.filter(function(res) {
						return res.id != id;
					});
				}
				//描绘点的方法
				var marker = new Object();
				marker = {
					id: id,
					latitude: lat,
					longitude: lon,
					iconPath: iconPath,
					width: width,
					height: height,
				};
				var json = JSON.stringify(that.markers);
				var arr = JSON.parse(json);
				arr.push(marker);
				that.markers = arr;
			},
		}
	}
</script>

<style>
	.map {
		width: 750rpx;
	}

	.waitContent {
		width: 700rpx;
		background-color: #FFFFFF;
		border-radius: 9px;
		align-items: center;
		padding-top: 50rpx;
		padding-left: 50rpx;
		padding-bottom: 50rpx;
		padding-right: 50rpx;
	}

	.comeTopContent {
		width: 700rpx;
		background-color: #FFFFFF;
		padding: 30rpx;
		border-radius: 9px;
		box-shadow: 0px 6px 20px 0px rgba(231, 231, 231, 0.53);
	}

	.comeBottomContent {
		width: 600rpx;
		padding-top: 30rpx;
		padding-bottom: 30rpx;
		background-color: #FFFFFF;
		border-radius: 9px;
		flex-direction: row;
		box-shadow: 0px 6px 20px 0px rgba(231, 231, 231, 0.53);
	}

	.orderBottomContent {
		width: 700rpx;
		background-color: #FFFFFF;
		padding-top: 30rpx;
		padding-left: 30rpx;
		padding-right: 30rpx;
		border-radius: 9px;
		/* box-shadow: 0px 6px 20px 0px rgba(231, 231, 231, 0.53); */
	}

	.orderTitleFont {
		font-size: 28rpx;
		font-family: Source Han Sans SC;
		font-weight: 400;
		color: rgba(44, 45, 45, 1);
	}

	.backImage {
		width: 120rpx;
		height: 120rpx;
		position: fixed;
		top: 50px;
		left: 10px;
	}

	.isWaitText {
		font-size: 32rpx;
		font-family: Source Han Sans SC;
		font-weight: 400;
		color: #2C2D2D;
	}

	.driverNameText {
		font-size: 34rpx;
		font-family: Source Han Sans SC;
		font-weight: bold;
		color: #2C2D2D;
	}

	.fontClass-30 {
		font-size: 30rpx;
		font-family: Source Han Sans SC;
		font-weight: 300;
		color: #2C2D2D;
	}

	.fontClass-28 {
		font-size: 32rpx;
		line-height: 50rpx;
		font-family: Source Han Sans SC;
		font-weight: 300;
		color: #2C2D2D;
	}

	.callPolice {
		font-size: 32rpx;
		font-family: Source Han Sans SC;
		font-weight: 300;
		color: #FC4646;
	}

	.cancle {
		font-size: 32rpx;
		font-family: Source Han Sans SC;
		font-weight: 300;
		color: #2C2D2D;
	}
</style>
